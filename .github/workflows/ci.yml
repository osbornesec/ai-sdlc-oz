name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run linting
        run: |
          uv run ruff check . --output-format=github
          uv run ruff format --check .

      - name: Run type checking
        run: |
          uv run mypy ai_sdlc

  test:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]
        exclude:
          - os: windows-latest
            python-version: "3.13"  # Exclude if there are known issues

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run tests
        run: |
          uv run pytest tests/ -v --cov=ai_sdlc --cov-report=xml --cov-report=term-missing --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
            coverage.xml
          retention-days: 7

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run integration tests
        run: |
          uv run pytest tests/integration/ -v

      - name: Test CLI installation and basic functionality
        run: |
          # Test that the CLI can be installed and run
          uv run aisdlc --help || echo "CLI help command test"

          # Test init command in a temporary directory
          mkdir -p /tmp/test-ai-sdlc
          cd /tmp/test-ai-sdlc
          uv run --directory $GITHUB_WORKSPACE aisdlc init

          # Verify key files were created
          test -f .aisdlc
          test -d prompts
          test -f prompts/0-idea.prompt.yml
          test -f prompts/1-prd.prompt.yml

          echo "âœ… CLI integration test passed"

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run security checks
        run: |
          uv run bandit -r ai_sdlc/
          uv run safety check
